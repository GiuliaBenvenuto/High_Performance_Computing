Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(105,3) inlined into h_parallel_num_threads.c(31,5)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ h_parallel_num_threads.c(106,5) ]
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3) inlined into h_parallel_num_threads.c(31,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3) inlined into h_parallel_num_threads.c(31,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3) inlined into h_parallel_num_threads.c(31,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3) inlined into h_parallel_num_threads.c(31,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(36,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(36,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(36,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(36,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(40,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(40,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(40,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3) inlined into h_parallel_num_threads.c(40,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(47,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(47,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(47,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(47,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(47,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(50,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(50,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(50,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(50,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5) inlined into h_parallel_num_threads.c(50,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(131,3) inlined into h_parallel_num_threads.c(57,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(85,11) inlined into h_parallel_num_threads.c(47,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at h_parallel_num_threads.c(79,3) inlined into h_parallel_num_threads.c(47,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(47,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(47,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(47,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(85,11) inlined into h_parallel_num_threads.c(50,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at h_parallel_num_threads.c(79,3) inlined into h_parallel_num_threads.c(50,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(50,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(50,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at h_parallel_num_threads.c(81,7) inlined into h_parallel_num_threads.c(50,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DFT(int, double *, double *, double *, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(91,5)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(78,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at h_parallel_num_threads.c(79,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Xr_o[k] (83:11) and Xi_o[k] (85:11)

      LOOP BEGIN at h_parallel_num_threads.c(81,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Xr_o[k] (83:11) and Xi_o[k] (85:11)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: fillInput(double *, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(105,3)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ h_parallel_num_threads.c(106,5) ]
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(107,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: setOutputZero(double *, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at h_parallel_num_threads.c(121,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: checkResults(double *, double *, double *, double *, double *, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(131,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: printResults(double *, double *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at h_parallel_num_threads.c(145,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================
