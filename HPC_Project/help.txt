g++ -o mandel mandelbrot.cpp
./mandel out.txt

To use icc:
source /opt/intel/oneapi/setvars.sh

---------- #pragma omp parallel for --------- STATIC
Compile with -qopenmp because we are using an Intel 
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 13 seconds.

icc -diag-disable=10441 -O3 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 13 seconds.

icc -diag-disable=10441 -O1 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 50 seconds.

To check the number of cores:
lscpu

Architecture:                    x86_64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
Address sizes:                   46 bits physical, 48 bits virtual
CPU(s):                          24
On-line CPU(s) list:             0-23
Thread(s) per core:              1
Core(s) per socket:              16
Socket(s):                       1
NUMA node(s):                    1
Vendor ID:                       GenuineIntel
CPU family:                      6
Model:                           151
Model name:                      12th Gen Intel(R) Core(TM) i9-12900K
Stepping:                        2
CPU MHz:                         3200.000
CPU max MHz:                     5200.0000
CPU min MHz:                     800.0000
BogoMIPS:                        6374.40
Virtualization:                  VT-x
L1d cache:                       384 KiB
L1i cache:                       256 KiB
L2 cache:                        10 MiB
NUMA node0 CPU(s):               0-23

To check the number of cores:
nproc
24 -> number of cores 
8 cores with hyperthreding -> they count 16
8 cores without hyperthreading 


---------- #pragma omp parallel for -------- TRY WITH DIFFERENT NUM OF THREADS
Outside the for the number of thread used is 1
In the region parallelized the number of used threads is the one that you set

Set the number of threads to use in the parallel region (inside the for)

omp_set_num_threads(4);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 5 seconds.

omp_set_num_threads(8);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 3 seconds.

omp_set_num_threads(16);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 1726 milliseconds.

omp_set_num_threads(24);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 1418 milliseconds.

omp_set_num_threads(32);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 1235 milliseconds.

omp_set_num_threads(512);
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 1034 milliseconds.



---------- #pragma omp parallel for schedule(dynamic) -----------
STATIC: pre-determined and predictable by the programmer
DYNAMIC: unpredictable, highly variable work per iteration -> 
    Useful in our case because depending on the if condition the workload changes.
    In our case, the workload changes between 6.000.000 and 6.000.000 * ITERATION in the worst case. 
    Dynamic is better if each iteration time could be different from the others.

icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 916 milliseconds.

omp_set_num_threads(24);
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 934 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 925 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 916 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 918 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 910 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ 



---------- #pragma omp parallel for schedule(dynamic) ----------- changing number of chunks
We choose the number of chunks by multiplying the number of cores (24) times 10 or 20 (factor)

#pragma omp parallel for schedule(dynamic, 240) 
S4678610@wk006:~/Desktop/HPC_Project/openMP$ icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 913 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 914 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 912 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ 


#pragma omp parallel for schedule(dynamic, 480)
More or less same results 



Since with this we get good results we want to try with different optimization levels: O1, O2, O3
---------- #pragma omp parallel for schedule(dynamic) ----------- changing number of chunks

icc -diag-disable=10441 -O1 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 2344 milliseconds.

icc -diag-disable=10441 -O2 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 930 milliseconds.

icc -diag-disable=10441 -O3 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 916 milliseconds.




---------- #pragma omp parallel for schedule(guided) ----------- 
Guided schedule uses decreasing chunk size (with optional minimum chunk).

#pragma omp parallel for schedule(guided, 6)
icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 921 milliseconds.
Time elapsed: 948 milliseconds.

#pragma omp parallel for schedule(guided, 100)
icc -diag-disable=10441 -qopenmp -O3 mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 952 milliseconds.

#pragma omp parallel for schedule(guided, 250000)
icc -diag-disable=10441 -qopenmp -O3 mandelbrot.cpp -o mandelbrot_omp
./mandelbrot_omp out.txt
Time elapsed: 1465 milliseconds.
-> Bad result because 250000 iterations is the maximum so it becomes static



---------- #pragma omp parallel for schedule(static, 100) ----------- 
S4678610@wk006:~/Desktop/HPC_Project/openMP$ icc -diag-disable=10441 -qopenmp mandelbrot.cpp -o mandelbrot_omp
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 1024 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 1077 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ ./mandelbrot_omp out.txt
Cores: 1
Time elapsed: 1129 milliseconds.
S4678610@wk006:~/Desktop/HPC_Project/openMP$ 




------------------------------------
omp_set_num_threads(4);
#pragma omp parallel for schedule(dynamic, 480) 
With -O3
Time elapsed: 3281 milliseconds.

omp_set_num_threads(8);
#pragma omp parallel for schedule(dynamic, 480) 
With -O3
Time elapsed: 1645 milliseconds.

omp_set_num_threads(16);
#pragma omp parallel for schedule(dynamic, 480) 
With -O3
Time elapsed: 997 milliseconds.

omp_set_num_threads(24);
#pragma omp parallel for schedule(dynamic, 480) 
With -O3
Time elapsed: 913 milliseconds.

omp_set_num_threads(512);
#pragma omp parallel for schedule(dynamic, 480) 
With -O3
Time elapsed: 946 milliseconds.
